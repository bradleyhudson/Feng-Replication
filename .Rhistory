geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
scale_fill_viridis(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lancaster NE in 2016') +
theme_replace() +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
)
ggplot(lincoln_weather, aes(x = `Mean Temperature [F]`, y = `Month`, fill = ..x..)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
scale_fill_viridis(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lancaster NE in 2016') +
theme_test() +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
)
ggplot(lincoln_weather, aes(x = `Mean Temperature [F]`, y = `Month`, fill = ..x..)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
scale_fill_viridis(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lancaster NE in 2016') +
theme() +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
)
ggplot(lincoln_weather, aes(x = `Mean Temperature [F]`, y = `Month`, fill = ..x..)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
scale_fill_viridis(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lancaster NE in 2016') +
theme_get() +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
)
ggplot(lincoln_weather, aes(x = `Mean Temperature [F]`, y = `Month`, fill = ..x..)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
scale_fill_viridis(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lancaster NE in 2016') +
theme_ipsum_rc() +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
)
ggplot(lincoln_weather, aes(x = `Mean Temperature [F]`, y = `Month`, fill = ..x..)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
scale_fill_viridis(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lancaster NE in 2016') +
theme_bw() +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
)
ggplot(lincoln_weather, aes(x = `Mean Temperature [F]`, y = `Month`, fill = ..x..)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
scale_fill_viridis(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lancaster NE in 2016') +
theme_ridges() +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
)
ggplot(lincoln_weather, aes(x = `Mean Temperature [F]`, y = `Month`, fill = ..x..)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
scale_fill_viridis(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lancaster NE in 2016') +
theme_ridges() +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 13)
)
ggplot(lincoln_weather, aes(x = `Mean Temperature [F]`, y = `Month`, fill = ..x..)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
scale_fill_viridis(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lancaster NE in 2016') +
theme_ridges() +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
)
ggplot(lincoln_weather, aes(x = `Mean Temperature [F]`, y = `Month`, fill = ..x..)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.03) +
scale_fill_viridis(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lancaster NE in 2016') +
theme_ridges() +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
)
ggplot(lincoln_weather, aes(x = `Mean Temperature [F]`, y = `Month`, fill = ..x..)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
scale_fill_viridis(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lancaster NE in 2016') +
theme_ridges() +
theme(
legend.position="bottom",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
)
ggplot(lincoln_weather, aes(x = `Mean Temperature [F]`, y = `Month`, fill = ..x..)) +
geom_density_ridges_gradient(scale = 4, rel_min_height = 0.01) +
scale_fill_viridis(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lancaster NE in 2016') +
theme_ridges() +
theme(
legend.position="bottom",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
)
ggplot(lincoln_weather, aes(x = `Mean Temperature [F]`, y = `Month`, fill = ..x..)) +
geom_density_ridges_gradient(scale = 5, rel_min_height = 0.01) +
scale_fill_viridis(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lancaster NE in 2016') +
theme_ridges() +
theme(
legend.position="bottom",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
)
ggplot(lincoln_weather, aes(x = `Mean Temperature [F]`, y = `Month`, fill = ..x..)) +
geom_density_ridges_gradient(scale = 5, rel_min_height = 0.01,scale_color_gradient="low") +
scale_fill_viridis(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lancaster NE in 2016') +
theme_ridges() +
theme(
legend.position="bottom",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
)
ggplot(lincoln_weather, aes(x = `Mean Temperature [F]`, y = `Month`, fill = ..x..)) +
geom_density_ridges_gradient(scale = 5, rel_min_height = 0.01)+
scale_fill_viridis(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lancaster NE in 2016') +
theme_ridges() +
theme(
legend.position="bottom",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
)
ggplot(lincoln_weather, aes(x = `Mean Temperature [F]`, y = `Month`, fill = ..x..)) +
geom_density_ridges_gradient(scale = 5, rel_min_height = 0.01)+
scale_fill_viridis("#132B43",name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lancaster NE in 2016') +
theme_ridges() +
theme(
legend.position="bottom",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
)
ggplot(lincoln_weather, aes(x = `Mean Temperature [F]`, y = `Month`, fill = ..x..)) +
geom_density_ridges_gradient(scale = 5, rel_min_height = 0.01)+
scale_fill_viridis(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lancaster NE in 2016') +
theme_ridges() +
theme(
legend.position="bottom",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
)
ggplot(lincoln_weather, aes(x = `Mean Temperature [F]`, y = `Month`, fill = ..x..)) +
geom_density_ridges_gradient(scale = 5, rel_min_height = 0.01)+
scale_fill_gradient(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lancaster NE in 2016') +
theme_ridges() +
theme(
legend.position="bottom",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
)
ggplot(lincoln_weather, aes(x = `Mean Temperature [F]`, y = `Month`, fill = ..x..)) +
geom_density_ridges_gradient(scale = 5, rel_min_height = 0.01)+
scale_fill_discrete(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lancaster NE in 2016') +
theme_ridges() +
theme(
legend.position="bottom",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
)
ggplot(lincoln_weather, aes(x = `Mean Temperature [F]`, y = `Month`, fill = ..x..)) +
geom_density_ridges_gradient(scale = 5, rel_min_height = 0.01)+
scale_fill_gradient(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lancaster NE in 2016') +
theme_ridges() +
theme(
legend.position="bottom",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
)
ggplot(lincoln_weather, aes(x = `Mean Temperature [F]`, y = `Month`, fill = ..x..)) +
geom_density_ridges_gradient(scale = 5, rel_min_height = 0.01)+
scale_fill_viridis_d(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lancaster NE in 2016') +
theme_ridges() +
theme(
legend.position="bottom",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
)
ggplot(lincoln_weather, aes(x = `Mean Temperature [F]`, y = `Month`, fill = ..x..)) +
geom_density_ridges_gradient(scale = 5, rel_min_height = 0.01)+
scale_fill_viridis_c(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lancaster NE in 2016') +
theme_ridges() +
theme(
legend.position="bottom",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
)
ggplot(lincoln_weather, aes(x = `Mean Temperature [F]`, y = `Month`, fill = ..x..)) +
geom_density_ridges_gradient(scale = 5, rel_min_height = 0.01)+
scale_fill_viridis_b(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lancaster NE in 2016') +
theme_ridges() +
theme(
legend.position="bottom",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
)
load("~/.RData")
load("~/.RData")
gplot(lincoln_weather, aes(x = `Mean Temperature [F]`, y = `Month`, fill = ..x..)) +
geom_density_ridges_gradient(scale = 5, rel_min_height = 0.01)+
scale_fill_viridis_b(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lancaster NE in 2016') +
theme_ridges() +
theme(
legend.position="bottom",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
)
library(ggplot2)
gplot(lincoln_weather, aes(x = `Mean Temperature [F]`, y = `Month`, fill = ..x..)) +
geom_density_ridges_gradient(scale = 5, rel_min_height = 0.01)+
scale_fill_viridis_b(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lancaster NE in 2016') +
theme_ridges() +
theme(
legend.position="bottom",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
)
trip.text.x = element_text(size = 8)
)
library(hrbrthemes)
ggplot(lincoln_weather, aes(x = `Mean Temperature [F]`, y = `Month`, fill = ..x..)) +
+     geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
+     scale_fill_viridis(name = "Temp. [F]", option = "C") +
+     labs(title = 'Temperatures in Lancaster NE in 2016') +
+     theme_ipsum() +
+     theme(
+         legend.position="none",
+         panel.spacing = unit(0.1, "lines"),
+         strip.text.x = element_text(size = 8)
+     )
ggplot(lincoln_weather, aes(x = `Mean Temperature [F]`, y = `Month`, fill = ..x..)) +
geom_density_ridges_gradient(scale = 5, rel_min_height = 0.01)+
scale_fill_viridis_b(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lancaster NE in 2016') +
theme_ridges() +
theme(
legend.position="bottom",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
)
library
library(ggridges)
library(ggplot2)
library(viridis)
library(hrbrthemes)
# Plot
ggplot(lincoln_weather, aes(x = `Mean Temperature [F]`, y = `Month`, fill = ..x..)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
scale_fill_viridis(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lincoln NE in 2016') +
theme_ipsum() +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
)
library
library(ggridges)
library(ggplot2)
library(viridis)
library(hrbrthemes)
# Plot
ggplot(lincoln_weather, aes(x = `Mean Temperature [F]`, y = `Month`, fill = ..x..)) +
geom_density_ridges_gradient(scale = 5, rel_min_height = 0.01) +
scale_fill_viridis_b(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lincoln NE in 2018') +
theme_ridges() +
theme(
legend.position="bottom",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
)
calcGDP <- function(dat,year=NULL,country=NULL)
{
if(!is.null(year)){
dat<-dat[dat$year %in% year,]
}
if(!is.null(country)){
dat <- dat[dat$country %in% country,]
}
gdp <- dat$pop*dat$gdpPercap
new <- cbind(dat,gdp=gdp)
return(new)
}
download.file("https://raw.githubusercontent.com/swcarpentry/r-novice-gapminder/gh-pages/_episodes_rmd/data/gapminder_wide.csv", destfile = "data/gapminder_wide.csv")
download.file("https://raw.githubusercontent.com/swcarpentry/r-novice-gapminder/gh-pages/_episodes_rmd/data/gapminder_wide.csv", destfile = "data/gapminder_wide.csv")
download.file("https://raw.githubusercontent.com/swcarpentry/r-novice-gapminder/gh-pages/_episodes_rmd/data/gapminder_wide.csv", destfile = "data/gapminder_wide.csv")\
download.file("https://raw.githubusercontent.com/swcarpentry/r-novice-gapminder/gh-pages/_episodes_rmd/data/gapminder_wide.csv", destfile = "data/gapminder_wide.csv")
withGDP<-calcGDP(gapminder)
str(gapminder)
install.packages("gapminder")
library(gapminder)
str(gapminder)
calcGDP <- function(dat,year=NULL,country=NULL)
{
if(!is.null(year)){
dat<-dat[dat$year %in% year,]
}
if(!is.null(country)){
dat <- dat[dat$country %in% country,]
}
gdp <- dat$pop*dat$gdpPercap
new <- cbind(dat,gdp=gdp)
return(new)
}
download.file("https://raw.githubusercontent.com/swcarpentry/r-novice-gapminder/gh-pages/_episodes_rmd/data/gapminder_wide.csv", destfile = "data/gapminder_wide.csv")
library(dplyr)
mean(gapminder[gapminder$continent==”Africa”,”gdpPercap”])
year_country_gdp<-select(gapminder,year,country,gdpPercap)
mean(gapminder[gapminder$continent==”Africa”,”gdpPercap”])
mean(gapminder[gapminder$continent==”Africa”,”gdpPercap”])
Data <- read.table("~/Documents/Data.sav", quote="\"")
View(Data)
summary(income.data)
install.packages('tinytex')
tinytex::install_tinytex()
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
#summary(cars)
kable(head(cars))
?kable
plot(pressure)
install.packages("kableExtra")
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
?kable
- my item 1
- my item 2
- my item 3
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
?kable
my item 1
my item 2
my item 3
knitr::opts_chunk$set(echo = TRUE)
#summary(cars)
library(knitr)
library(kableExtra)
kable(head(cars))
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
#summary(cars)
library(knitr)
library(kableExtra)
kable(head(cars))
plot(pressure)
getwd()
setwd('')
setwd('\mydocuments\')
install if needed (do this exactly once)
install.packages("usethis")
library(usethis)
use_git_config(user.name = "bradleyhudson", user.email = "b.hudson@lancaster.ac.uk")
## Instructions for running screening
install.packages(c("BiocManager", "metagear"))
## Instructions for running screening
f(!require(metagear)){
install.packages("BiocManager");
BiocManager::install("EBImage")
install.packages("BiocManager")
BiocManager::install("EBImage")
library(metagear)
library(EBImage)
library(metagear)
library(EBImage)
# initialize screener GUI
abstract_screener("effort_AP.csv", aReviewer = "BH", # replace AP with your initials
highlightKeywords = c("hemisphere", "neighbour", "neighbor", "neighbourhood", "neighborhood",
"lexical decision", "visual field"))
# initialize screener GUI
abstract_screener("effort_AP.csv", aReviewer = "AP", # replace AP with your initials
highlightKeywords = c("hemisphere", "neighbour", "neighbor", "neighbourhood", "neighborhood",
"lexical decision", "visual field"))
# initialize screener GUI
abstract_screener("effort_BH.csv", aReviewer = "BH", # replace AP with your initials
highlightKeywords = c("hemisphere", "neighbour", "neighbor", "neighbourhood", "neighborhood",
"lexical decision", "visual field"))
```{r setup}
# first check the packages exist, if they don't install (this will require manual typed responses)
if(!require(metagear)){
install.packages("BiocManager");
BiocManager::install("EBImage")
install.packages("metagear");
}
library(metagear)
library(EBImage)
```
install.packages("BlocManager")
BlocManager::install("EBImage")
install.packages("BiocManager")
Biocmanager::install("EBImage")
BiocManager::install("EBImage")
library(metagear)
library(EBImage)
```{r GUI run}
# initialize screener GUI
abstract_screener("effort_BH.csv", aReviewer = "BH", # replace AP with your initials
highlightKeywords = c("hemisphere", "neighbour", "neighbor", "neighbourhood", "neighborhood",
"lexical decision", "visual field"))
```
```{r GUI run}
# initialize screener GUI
abstract_screener("effort_BH.csv", aReviewer = "BH",
highlightKeywords = c("hemisphere", "neighbour", "neighbor", "neighbourhood", "neighborhood",
"lexical decision", "visual field"))
```
```{r GUI run}
# initialize screener GUI
abstract_screener("effort_BH.csv", aReviewer = "BH", # replace AP with your initials
highlightKeywords = c("hemisphere", "neighbour", "neighbor", "neighbourhood", "neighborhood",
"lexical decision", "visual field"))
```
```{r GUI run}
# initialize screener GUI
abstract_screener("effort_BH .csv", aReviewer = "BH", # replace AP with your initials
highlightKeywords = c("hemisphere", "neighbour", "neighbor", "neighbourhood", "neighborhood",
"lexical decision", "visual field"))
```
```{r GUI run}
# initialize screener GUI
abstract_screener("effort_BH.csv", aReviewer = "BH",
highlightKeywords = c("hemisphere", "neighbour", "neighbor", "neighbourhood", "neighborhood",
"lexical decision", "visual field"))
```
```{r GUI run}
# initialize screener GUI
abstract_screener("effort_AP.csv", aReviewer = "AP", # replace AP with your initials
highlightKeywords = c("hemisphere", "neighbour", "neighbor", "neighbourhood", "neighborhood",
"lexical decision", "visual field"))
```
load("~/Documents/Work/Adam Meta-analysis/.RData")
install.packages("synthesisr")
# system.file will look for the path to where synthesisr is installed
# by using the example bibliographic data files, you can reproduce the vignette
bibfiles <- list.files("./Practice/")
# we can print the list of bibfiles to confirm what we will import
# in this example, we have bibliographic data exported from Scopus and Zoological Record
print(bibfiles)
#> [1] "/private/var/folders/8h/x1hgxslx6cl5gfhhxjddyrvw0000gn/T/RtmpZXCJZD/downloaded_packages"
# now we can use read_refs to read in our bibliographic data files
# we save them to a data.frame object (because return_df=TRUE) called imported_files
library(synthesisr)
imported_files <- read_refs(
filename = bibfiles,
return_df = TRUE)
install.packages("synthesisr")
# system.file will look for the path to where synthesisr is installed
# by using the example bibliographic data files, you can reproduce the vignette
bibfiles <- list.files(
system.file("extdata/", package = "synthesisr"),
full.names = TRUE
)
View(trip.text.x)
View(trip.text.x)
View(trip.text.x)
View(trip.text.x)
View(trip.text.x)
View(trip.text.x)
View(trip.text.x)
View(trip.text.x)
View(trip.text.x)
# system.file will look for the path to where synthesisr is installed
# by using the example bibliographic data files, you can reproduce the vignette
bibfiles <- list.files("./practice/")
# system.file will look for the path to where synthesisr is installed
# by using the example bibliographic data files, you can reproduce the vignette
bibfiles <- list.files(
"./mydocuments/practice/"("extdata/", package = "synthesisr"),
full.names = TRUE
)
# system.file will look for the path to where synthesisr is installed
# by using the example bibliographic data files, you can reproduce the vignette
bibfiles <- list.files("mydocuments/practice")
system.file(package = "synthesisr")
print(bibfiles)
list.files("practice")
setwd("~/Documents/GitHub/Feng-Replication")
